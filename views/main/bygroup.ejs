<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('./partials/headerlink'); %>
</head>

<style>
    #map {
        width: 100%;
        height: 91vh;
    }
</style>

<body id="body-pd">
    <header class="header" id="header">
        <div class="header_toggle"> <i class='bx bx-menu' id="header-toggle"></i> </div>
        <div class="header_img"> <img src="https://i.imgur.com/hczKIze.jpg" alt=""> </div>
    </header>
    <div class="l-navbar" id="nav-bar">
        <nav class="nav">
            <div class="legend-place">
                <a href="#" class="nav_logo" style="text-align: center;"> <i class='bx bx-layer nav_logo-icon'></i>
                    <span class="nav_logo-name">Map</span> </a>
                <div class="nav_list">
                <%
                if(group_layer.length!=0){
                let i=1;
                group_layer.forEach(function(layer){
                %>
                    <a href="/get_group/<%= layer.id_group %>" id="gg" class="nav_link active"> <i class='<%= layer.icon %>'></i>
                        <span class="nav_name"><%= layer.nama_group %></span> 
                    </a> 
                <%  i++; }) %>
                <% } else { %>
                    <a href="#" id="gg" class="nav_link active"> <i class='bx bxs-tree nav_icon'></i>
                        <span class="nav_name">No Layer</span>
                    </a>
                <% } %>   
                </div>
            </div>
            <a href="#" class="nav_link"> <i class='bx bx-log-out nav_icon'></i>
                <span class="nav_name">SignOut</span>
            </a>
        </nav>
    </div>
    <!--Container Main start-->
    <div class="height-100 bg-light">
        <div id='map'></div>
    </div>

    <%- include('./partials/footerlink'); %>

    <script>
        const map = L.map('map', {
            zoomControl: false
        }).setView([39.74739, -105], 13);

        L.tileLayer(
            'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
                maxZoom: 18,
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, ' +
                    'Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
                id: 'mapbox/light-v9',
                tileSize: 512,
                zoomOffset: -1
            }).addTo(map);

        L.control.zoom({
            position: 'topright'
        }).addTo(map);
        
        // Get Map
        
        let raw_data = []
        let kat_data = []
        let layer = '<% Object.keys(data_layer).forEach(function(keys){ %>'
            raw_data.push({
                'geojson':JSON.parse('<%- data_layer[keys].data_layer %>'),
                'tipe_style': '<%= data_layer[keys].tipe_style %>',
                'style': JSON.parse('<%- data_layer[keys].style %>'),
                'properti': '<%= data_layer[keys].properti %>'
            })
        '<% }) %>'
       
        raw_data.forEach(layer => {
            
            let geojson = layer.geojson
            let def_geo = L.geoJSON(geojson)
         
          
            def_geo.addTo(map)
            map.fitBounds(def_geo.getBounds())

            if(layer.tipe_style === "single") {
               return def_geo.setStyle(layer.style)
            } else {

                let f_prop = layer.properti
              
                let getKategoriStyle = (feature) =>{
                    let prop = feature.properties[f_prop]
                   
                    return setKategoriStyle(prop)
                }
        
                let setKategoriStyle = (prop) => {
                    let prop_val = Object.keys(layer.style)
                    for(let i = 0; i < prop_val.length; i++) {
                        switch(prop){
                            case prop_val[i]:
                            return layer.style[prop_val[i]]
                                break
                        }
                    }
                }
                return def_geo.setStyle(getKategoriStyle)
            }
        })
        

        // Free hand
        let nav_list = document.querySelectorAll('.nav_name')

        nav_list.forEach(text => {
            let count = 8
            let text_ori = text.innerHTML
        
            let slice = text_ori.slice(0, count) + (text_ori.length > count ? "-" + (text_ori.slice(count - text_ori.length)) : "");
           
            text.innerHTML = slice
           
        })

    </script>
</body>

</html>